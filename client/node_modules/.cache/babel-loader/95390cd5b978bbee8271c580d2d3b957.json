{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Fragment,useEffect}from'react';import{Link}from'react-router-dom';import{connect}from'react-redux';import DashboardActions from'./DashboardActions';import Wallet from'./Wallet';import{getCurrentProfile,deleteAccount}from'../../actions/profile';var Dashboard=function Dashboard(_ref){var getCurrentProfile=_ref.getCurrentProfile,deleteAccount=_ref.deleteAccount,user=_ref.auth.user,profile=_ref.profile.profile;useEffect(function(){getCurrentProfile();},[getCurrentProfile]);return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"large text-primary\",children:\"Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"lead\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"}),\" Welcome \",user&&user.name]}),profile!==null?/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(DashboardActions,{}),/*#__PURE__*/_jsx(Wallet,{wallet:profile.wallet}),/*#__PURE__*/_jsx(\"div\",{className:\"my-2\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-danger\",onClick:function onClick(){return deleteAccount();},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user-minus\"}),\" Delete My Account\"]})})]}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"You have not yet setup a profile, please add some info\"}),/*#__PURE__*/_jsx(Link,{to:\"/create-profile\",className:\"btn btn-primary my-1\",children:\"Create Profile\"})]})]});};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,profile:state.profile};};export default connect(mapStateToProps,{getCurrentProfile:getCurrentProfile,deleteAccount:deleteAccount})(Dashboard);","map":{"version":3,"sources":["/Users/ydocs/Desktop/ccmeforrealthistime/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","connect","DashboardActions","Wallet","getCurrentProfile","deleteAccount","Dashboard","user","auth","profile","name","wallet","mapStateToProps","state"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,iBAAT,CAA4BC,aAA5B,KAAiD,uBAAjD,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAKZ,IAJJF,CAAAA,iBAII,MAJJA,iBAII,CAHJC,aAGI,MAHJA,aAGI,CAFIE,IAEJ,MAFJC,IAEI,CAFID,IAEJ,CADOE,OACP,MADJA,OACI,CADOA,OACP,CACJV,SAAS,CAAC,UAAM,CACdK,iBAAiB,GAClB,CAFQ,CAEN,CAACA,iBAAD,CAFM,CAAT,CAIA,mBACE,MAAC,QAAD,yBACE,WAAI,SAAS,CAAC,oBAAd,uBADF,cAEE,WAAG,SAAS,CAAC,MAAb,wBACE,UAAG,SAAS,CAAC,aAAb,EADF,aACyCG,IAAI,EAAIA,IAAI,CAACG,IADtD,GAFF,CAKGD,OAAO,GAAK,IAAZ,cACC,MAAC,QAAD,yBACE,KAAC,gBAAD,IADF,cAEE,KAAC,MAAD,EAAQ,MAAM,CAAEA,OAAO,CAACE,MAAxB,EAFF,cAIE,YAAK,SAAS,CAAC,MAAf,uBACE,gBAAQ,SAAS,CAAC,gBAAlB,CAAmC,OAAO,CAAE,yBAAMN,CAAAA,aAAa,EAAnB,EAA5C,wBACE,UAAG,SAAS,CAAC,mBAAb,EADF,wBADF,EAJF,GADD,cAYC,MAAC,QAAD,yBACE,6EADF,cAEE,KAAC,IAAD,EAAM,EAAE,CAAC,iBAAT,CAA2B,SAAS,CAAC,sBAArC,4BAFF,GAjBJ,GADF,CA2BD,CArCD,CAuCA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCL,IAAI,CAAEK,KAAK,CAACL,IADsB,CAElCC,OAAO,CAAEI,KAAK,CAACJ,OAFmB,CAAZ,EAAxB,CAKA,cAAeR,CAAAA,OAAO,CAACW,eAAD,CAAkB,CAAER,iBAAiB,CAAjBA,iBAAF,CAAqBC,aAAa,CAAbA,aAArB,CAAlB,CAAP,CACbC,SADa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport Wallet from './Wallet';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" /> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Wallet wallet={profile.wallet} />\n\n          <div className=\"my-2\">\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n              <i className=\"fas fa-user-minus\" /> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n"]},"metadata":{},"sourceType":"module"}